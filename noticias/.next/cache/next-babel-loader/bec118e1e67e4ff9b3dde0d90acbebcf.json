{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../firebase';\n\nvar useProductos = function useProductos(orden) {\n  var _useState = useState([]),\n      productos = _useState[0],\n      guardarProductos = _useState[1];\n\n  var _useContext = useContext(FirebaseContext),\n      firebase = _useContext.firebase;\n\n  useEffect(function () {\n    var obtenerProductos = function obtenerProductos() {\n      firebase.db.collection('productos').orderBy(orden, 'desc').onSnapshot(manejarSnapshot);\n    };\n\n    obtenerProductos();\n  }, []);\n\n  function manejarSnapshot(snapshot) {\n    var productos = snapshot.docs.map(function (doc) {\n      return _objectSpread({\n        id: doc.id\n      }, doc.data());\n    });\n    guardarProductos(productos);\n  }\n\n  return {\n    productos: productos\n  };\n};\n\nexport default useProductos;","map":{"version":3,"sources":["C:/Users/gcarranza/Downloads/noticias/noticias/hooks/useProductos.js"],"names":["React","useState","useEffect","useContext","FirebaseContext","useProductos","orden","productos","guardarProductos","firebase","obtenerProductos","db","collection","orderBy","onSnapshot","manejarSnapshot","snapshot","docs","map","doc","id","data"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,eAAT,QAAgC,aAAhC;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,kBAEYL,QAAQ,CAAC,EAAD,CAFpB;AAAA,MAEnBM,SAFmB;AAAA,MAERC,gBAFQ;;AAAA,oBAILL,UAAU,CAACC,eAAD,CAJL;AAAA,MAIlBK,QAJkB,eAIlBA,QAJkB;;AAM1BP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BD,MAAAA,QAAQ,CAACE,EAAT,CAAYC,UAAZ,CAAuB,WAAvB,EAAoCC,OAApC,CAA4CP,KAA5C,EAAmD,MAAnD,EAA2DQ,UAA3D,CAAsEC,eAAtE;AACH,KAFD;;AAGAL,IAAAA,gBAAgB;AACnB,GALQ,EAKN,EALM,CAAT;;AAOA,WAASK,eAAT,CAAyBC,QAAzB,EAAmC;AAC/B,QAAMT,SAAS,GAAGS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG,EAAI;AACvC;AACAC,QAAAA,EAAE,EAAED,GAAG,CAACC;AADR,SAEGD,GAAG,CAACE,IAAJ,EAFH;AAIH,KALiB,CAAlB;AAOAb,IAAAA,gBAAgB,CAACD,SAAD,CAAhB;AACH;;AAED,SAAO;AACHA,IAAAA,SAAS,EAATA;AADG,GAAP;AAGH,CA3BD;;AA6BA,eAAeF,YAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../firebase';\n\nconst useProductos = orden => {\n\n    const [productos, guardarProductos] = useState([]);\n\n    const { firebase } = useContext(FirebaseContext);\n\n    useEffect(() => {\n        const obtenerProductos = () => {\n            firebase.db.collection('productos').orderBy(orden, 'desc').onSnapshot(manejarSnapshot)\n        }\n        obtenerProductos();\n    }, []);\n\n    function manejarSnapshot(snapshot) {\n        const productos = snapshot.docs.map(doc => {\n            return {\n            id: doc.id,\n            ...doc.data()\n            }\n        });\n\n        guardarProductos(productos);\n    }\n\n    return {\n        productos\n    }\n}\n\nexport default useProductos;"]},"metadata":{},"sourceType":"module"}